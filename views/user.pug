extends default
block main
  link(rel="stylesheet", href="/css/tableDefault.css")
  link(rel="stylesheet", href="/css/modal.css")
  main(class="table", id="customers_table")
    section(class="table__header")
      h1 Danh sách người dùng
      button(onclick="window.location.href='/addUser'" class="insert" style="color: white; margin-right: 40px; margin-top: 25px; height: 45px; border: none; width: 150px; border-radius: 5px; background-color:rgb(74, 119, 168);") Thêm người dùng

    section(class="table__body")
      table
        thead
          tr
            th STT
            th Username
            th Password
            th Họ tên
            th SĐT
            th Địa chỉ
            th Quyền
            th Hành động
        tbody

    //- Modal for updating product
    div(id="updateModal", class="modal")
      div(class="modal-content")
        span(class="close") &times;
        h2(style="text-align: center; margin-bottom: 15px") Cập nhật người dùng
        form(id="updateForm")
          label(for="Username") Username:
          input(type="text", id="Username", name="Username", required)

          label(for="Password") Password:
          input(type="text", id="Password", name="Password", required)

          label(for="FullName") Họ và tên:
          input(type="text", id="FullName", name="FullName", required)

          label(for="PhoneNumber") SĐT:
          input(type="text", id="PhoneNumber", name="PhoneNumber", required)

          label(for="Email") Email:
          input(type="email", id="Email", name="Email", required)

          label(for="Ward") Phường:
          input(type="text", id="Ward", name="Ward", required)

          label(for="District") Quận:
          input(type="text", id="District", name="District", required)

          label(for="City") Thành phố:
          input(type="text", id="City", name="City", required)

          label(for="Region") Khu vực:
          input(type="text", id="Region", name="Region", required)

          label(for="Role") Phân quyền:
          input(type="text", id="Role", name="Role", required)

          label(for="CreateAt") Ngày thêm:
          input(type="text", id="CreateAt", name="CreateAt", required)

          label(for="rowguid") rowguid:
          input(type="text", id="rowguid", name="rowguid", required)

          button(type="submit") Cập nhật

  script.
    document.addEventListener('DOMContentLoaded', () => {
      const loadProducts = (searchQuery = '') => {
        const api = `/usersRoute`;

        // Gọi API để lấy thông tin sản phẩm
        fetch(api)
          .then(res => res.json())
          .then(user => {
            const tbody = document.querySelector('#customers_table tbody');
            tbody.innerHTML = '';
            user.forEach((product, index) => {
              const row = `
                <tr>
                  <td>${index + 1}</td>
                  <td>${product.Username}</td>
                  <td>${product.Password}</td>
                  <td>${product.FullName}</td>
                  <td>${product.PhoneNumber}</td>
                  <td>${product.City}</td>
                  <td>${product.Role}</td>
                  <td>
                    <button class="btn btn-danger btn-delete" data-id="${product.UserID}" style="background-color:rgb(228, 94, 118)" type="button">Xóa</button>
                    <button class="btn btn-danger btn-update" data-id="${product.UserID}" style="background-color: #70C2B4" type="button">Cập nhật</button>
                  </td>
                </tr>
              `;
              tbody.innerHTML += row;
            });

            attachDeleteEvents();
            attachUpdateEvents();
          })
          .catch(error => console.error('Error fetching products:', error));
      };

      const input = document.querySelector('.input-text');
      if (input) {
        input.addEventListener('keydown', (event) => {
          if (event.key === 'Enter') {
            loadProducts(input.value);
          }
        });
      }

      const attachDeleteEvents = () => {
        const deleteButtons = document.querySelectorAll('.btn-delete');
        deleteButtons.forEach((button) => {
          button.addEventListener('click', (event) => {
            const productId = event.target.dataset.id;
            if (confirm('Bạn có chắc chắn muốn xóa sản phẩm này?')) {
              fetch(`/usersRoute/${productId}`, { method: 'DELETE' })
                .then((response) => {
                  if (response.ok) {
                    alert('Xóa sản phẩm thành công!');
                    loadProducts();
                  } else {
                    alert('Có lỗi xảy ra khi xóa sản phẩm.');
                  }
                })
                .catch((error) => console.error('Error:', error));
            }
          });
        });
      };

      const attachUpdateEvents = () => {
        const updateButtons = document.querySelectorAll('.btn-update');
        updateButtons.forEach((button) => {
          button.addEventListener('click', (event) => {
            const id = event.target.dataset.id;
            console.log(id);
            // Lấy dữ liệu của sản phẩm từ API
            fetch(`/usersRoute/${id}`)
              .then(res => res.json())
              .then(product => {
                 var user = product[0];
                // Điền dữ liệu vào moơdal
                 console.log(product.Username)
                 document.getElementById('Username').value = user.Username;
                 document.getElementById('Password').value = user.Password;
                 document.getElementById('FullName').value = user.FullName;
                 document.getElementById('PhoneNumber').value = user.PhoneNumber;
                 document.getElementById('Email').value = user.Email;
                 document.getElementById('Ward').value = user.Ward;
                 document.getElementById('District').value = user.District;
                 document.getElementById('City').value = user.City;
                 document.getElementById('Region').value = user.Region;
                 document.getElementById('Role').value = user.Role;
                 document.getElementById('CreateAt').value = user.CreatedAt.split('T')[0];
                 document.getElementById('rowguid').value = user.rowguid;

                // Mở modal
                const modal = document.getElementById('updateModal');
                modal.style.display = 'block';

                // Cập nhật dữ liệu khi gửi form
                document.getElementById('updateForm').onsubmit = (e) => {
                  e.preventDefault();
                  const updatedProduct = {
                      Username: document.getElementById('Username').value,
                      Password: document.getElementById('Password').value,
                      FullName: document.getElementById('FullName').value,
                      PhoneNumber: document.getElementById('PhoneNumber').value,
                      Email: document.getElementById('Email').value,
                      Ward: document.getElementById('Ward').value,
                      District: document.getElementById('District').value,
                      City: document.getElementById('City').value,
                      Region: document.getElementById('Region').value,
                      Role: document.getElementById('Role').value,
                      CreatedAt: document.getElementById('CreateAt').value,
                      rowguid: document.getElementById('rowguid').value,
                  };

                  // Gửi dữ liệu cập nhật đến API
                  fetch(`/usersRoute/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(updatedProduct),
                  })
                    .then((response) => {
                      if (response.ok) {
                        alert('Cập nhật user thành công!');
                        loadProducts();
                        modal.style.display = 'none'; // Đóng modal sau khi cập nhật
                      } else {
                        alert('Có lỗi xảy ra khi cập nhật sản phẩm.');
                      }
                    })
                    .catch((error) => console.error('Error:', error));
                };
              })
              .catch((error) => console.error('Error fetching product details:', error));
          });
        });
      };

      // Đóng modal
      const closeModal = document.querySelector('.close');
      closeModal.addEventListener('click', () => {
        document.getElementById('updateModal').style.display = 'none';
      });

      // Load products initially
      loadProducts();
    });

